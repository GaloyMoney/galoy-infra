groups:
- name: gcp-testflight
  jobs:
  - gcp-testflight-bootstrap
  - gcp-testflight-inception
  - gcp-testflight-platform
  - gcp-testflight-services
  - gcp-testflight-cleanup
  - gcp-bump-repos
- name: azure-testflight
  jobs:
  - azure-testflight-bootstrap
  - azure-testflight-inception
  - azure-testflight-platform
  - azure-testflight-services
  - azure-testflight-cleanup
  - azure-bump-repos
- name: image
  jobs:
  - build-gcp-pipeline-image
  - build-azure-pipeline-image
- name: k8s-upgrade
  jobs:
  - check-and-upgrade-k8s
jobs:
- name: gcp-testflight-bootstrap
  serial: true
  plan:
  - put: testflight-lock
    params:
      claim: gcp-testflight
  - in_parallel:
    - get: gcp-modules
      trigger: true
    - get: repo
    - get: pipeline-tasks
    - get: testflight-uid
  - task: bootstrap
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: gcp-modules
        path: modules
      - name: testflight-uid
      params:
        GOOGLE_CREDENTIALS: ((testflight-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((testflight-ssh.ssh_private_key))
        SSH_PUB_KEY: ((testflight-ssh.ssh_public_key))
        TESTFLIGHT_ADMINS: ((testflight-admins.users_json))
        KUBE_HOST: ((tf-backend-creds.host))
        KUBE_CA_CERT: ((tf-backend-creds.ca_cert))
        KUBE_TOKEN: ((tf-backend-creds.token))
        TF_VAR_gcp_project: galoy-infra-testflight
        TF_VAR_enable_services: false
        TF_VAR_destroyable_postgres: true
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/bootstrap.sh
  - put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :zap: $BUILD_JOB_NAME> completed!'
  on_failure:
    put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: gcp-testflight-inception
  serial: true
  plan:
  - get: testflight-lock
    passed:
    - gcp-testflight-bootstrap
  - in_parallel:
    - get: gcp-modules
      trigger: true
      passed:
      - gcp-testflight-bootstrap
    - get: repo
      passed:
      - gcp-testflight-bootstrap
    - get: pipeline-tasks
    - get: testflight-uid
      passed:
      - gcp-testflight-bootstrap
  - task: inception
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: gcp-modules
        path: modules
      - name: testflight-uid
      params:
        GOOGLE_CREDENTIALS: ((testflight-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((testflight-ssh.ssh_private_key))
        SSH_PUB_KEY: ((testflight-ssh.ssh_public_key))
        TESTFLIGHT_ADMINS: ((testflight-admins.users_json))
        KUBE_HOST: ((tf-backend-creds.host))
        KUBE_CA_CERT: ((tf-backend-creds.ca_cert))
        KUBE_TOKEN: ((tf-backend-creds.token))
        TF_VAR_gcp_project: galoy-infra-testflight
        TF_VAR_enable_services: false
        TF_VAR_destroyable_postgres: true
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/inception.sh
  - put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :zap: $BUILD_JOB_NAME> completed!'
  on_failure:
    put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: gcp-testflight-platform
  serial: true
  plan:
  - get: testflight-lock
    passed:
    - gcp-testflight-inception
  - in_parallel:
    - get: gcp-modules
      trigger: true
      passed:
      - gcp-testflight-inception
    - get: repo
      passed:
      - gcp-testflight-inception
    - get: pipeline-tasks
    - get: testflight-uid
      passed:
      - gcp-testflight-inception
  - task: platform
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: gcp-modules
        path: modules
      - name: testflight-uid
      params:
        GOOGLE_CREDENTIALS: ((testflight-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((testflight-ssh.ssh_private_key))
        SSH_PUB_KEY: ((testflight-ssh.ssh_public_key))
        TESTFLIGHT_ADMINS: ((testflight-admins.users_json))
        KUBE_HOST: ((tf-backend-creds.host))
        KUBE_CA_CERT: ((tf-backend-creds.ca_cert))
        KUBE_TOKEN: ((tf-backend-creds.token))
        TF_VAR_gcp_project: galoy-infra-testflight
        TF_VAR_enable_services: false
        TF_VAR_destroyable_postgres: true
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/platform.sh
  - put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :zap: $BUILD_JOB_NAME> completed!'
  on_failure:
    put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: gcp-testflight-services
  serial: true
  plan:
  - get: testflight-lock
    passed:
    - gcp-testflight-platform
  - in_parallel:
    - get: gcp-modules
      trigger: true
      passed:
      - gcp-testflight-platform
    - get: repo
      passed:
      - gcp-testflight-platform
    - get: pipeline-tasks
    - get: testflight-uid
      passed:
      - gcp-testflight-platform
  - task: services
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: gcp-modules
        path: modules
      - name: testflight-uid
      params:
        GOOGLE_CREDENTIALS: ((testflight-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((testflight-ssh.ssh_private_key))
        SSH_PUB_KEY: ((testflight-ssh.ssh_public_key))
        TESTFLIGHT_ADMINS: ((testflight-admins.users_json))
        KUBE_HOST: ((tf-backend-creds.host))
        KUBE_CA_CERT: ((tf-backend-creds.ca_cert))
        KUBE_TOKEN: ((tf-backend-creds.token))
        TF_VAR_gcp_project: galoy-infra-testflight
        TF_VAR_enable_services: false
        TF_VAR_destroyable_postgres: true
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/services.sh
  - put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :zap: $BUILD_JOB_NAME> completed!'
  on_failure:
    put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: gcp-testflight-cleanup
  serial: true
  plan:
  - get: testflight-lock
    passed:
    - gcp-testflight-services
  - in_parallel:
    - get: gcp-modules
      trigger: true
      passed:
      - gcp-testflight-services
    - get: repo
      passed:
      - gcp-testflight-services
    - get: pipeline-tasks
    - get: testflight-uid
      passed:
      - gcp-testflight-services
  - task: teardown
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: gcp-modules
        path: modules
      - name: testflight-uid
      outputs:
      - name: repo
      params:
        GOOGLE_CREDENTIALS: ((testflight-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((testflight-ssh.ssh_private_key))
        SSH_PUB_KEY: ((testflight-ssh.ssh_public_key))
        TESTFLIGHT_ADMINS: ((testflight-admins.users_json))
        KUBE_HOST: ((tf-backend-creds.host))
        KUBE_CA_CERT: ((tf-backend-creds.ca_cert))
        KUBE_TOKEN: ((tf-backend-creds.token))
        TF_VAR_gcp_project: galoy-infra-testflight
        TF_VAR_enable_services: false
        TF_VAR_destroyable_postgres: true
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/teardown.sh
  - in_parallel:
    - put: testflight-lock
      params:
        release: testflight-lock
    - put: testflight-uid
      params:
        bump: patch
  - put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :zap: $BUILD_JOB_NAME> completed!'
  on_failure:
    put: slack
    params:
      channel: galoy-infra-notifications
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: gcp-bump-repos
  plan:
  - in_parallel:
    - get: galoy-staging
    - get: gcp-modules
      trigger: true
      passed:
      - gcp-testflight-cleanup
    - get: repo
      trigger: true
      passed:
      - gcp-testflight-cleanup
      params:
        fetch_tags: false
    - get: pipeline-tasks
  - task: bump-repos
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/gcp-infra-pipeline
      inputs:
      - name: galoy-staging
      - name: pipeline-tasks
      - name: gcp-modules
        path: modules
      - name: repo
      outputs:
      - name: repo
      - name: galoy-staging
      params:
        BRANCH: main
        GITHUB_SSH_KEY: ((github.private_key))
      run:
        path: pipeline-tasks/ci/tasks/bump-repos.sh
  - in_parallel:
    - put: repo
      params:
        repository: repo
        rebase: true
    - put: galoy-staging
      params:
        repository: galoy-staging
        rebase: true
- name: check-and-upgrade-k8s
  plan:
  - in_parallel:
    - get: daily-trigger-resource
      trigger: true
    - get: repo
    - get: pipeline-tasks
  - task: check-and-upgrade-k8s
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/galoy-deployments-pipeline
      inputs:
      - name: repo
      - name: pipeline-tasks
      outputs:
      - name: repo
      params:
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/check-and-upgrade-k8s.sh
  - put: repo
    params:
      repository: repo
      rebase: true
resources:
- name: repo
  type: git
  source:
    ignore_paths:
    - ci/*[^md]
    uri: git@github.com:GaloyMoney/galoy-infra.git
    branch: main
    private_key: ((github.private_key))
- name: pipeline-tasks
  type: git
  source:
    paths:
    - ci/tasks/*
    - ci/k8s-upgrade/*
    - Makefile
    uri: git@github.com:GaloyMoney/galoy-infra.git
    branch: main
    private_key: ((github.private_key))
- name: galoy-staging
  type: git
  source:
    uri: git@github.com:GaloyMoney/galoy-deployments.git
    branch: main
    private_key: ((github.private_key))
- name: testflight-lock
  type: pool
  source:
    uri: git@github.com:GaloyMoney/concourse-locks.git
    branch: main
    pool: infra-testflight
    private_key: ((github.private_key))
- name: slack
  type: slack-notification
  source:
    url: ((galoy-infra-slack.api_url))
- name: testflight-uid
  type: semver
  source:
    initial_version: 0.0.0
    driver: git
    file: version
    uri: git@github.com:GaloyMoney/galoy-infra.git
    branch: testflight-name-prefix-uid-branch
    private_key: ((github.private_key))
- name: gcp-modules
  type: git
  source:
    paths:
    - modules/bootstrap/gcp
    - modules/inception/gcp
    - modules/platform/gcp
    - modules/services
    uri: git@github.com:GaloyMoney/galoy-infra.git
    branch: main
    private_key: ((github.private_key))
- name: daily-trigger-resource
  type: time
  source:
    start: 1:00 AM
    stop: 2:00 AM
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest
- name: cepler-in
  type: registry-image
  source:
    repository: cepler/cepler-concourse-resource
    tag: latest
- name: cepler-out
  type: registry-image
  source:
    repository: cepler/cepler-concourse-resource
    tag: latest
- name: honeymarker
  type: docker-image
  source:
    repository: us.gcr.io/galoy-org/honeymarker-resource
    tag: edge
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
